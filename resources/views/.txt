https://stackoverflow.com/questions/17417831/embedding-google-map-with-address
https://stackoverflow.com/questions/8633574/get-latitude-and-longitude-automatically-using-php-api
how to integrate google map in php using csv file which contains address
https://stackoverflow.com/questions/34252956/php-and-google-maps-api
https://stackoverflow.com/questions/42392788/displaying-sql-address-values-onto-google-maps-api
https://stackoverflow.com/questions/7690741/query-database-for-address-and-display-it-on-a-google-map
https://stackoverflow.com/questions/12124481/using-2-methods-to-display-markers-and-polylines-on-a-google-map
https://stackoverflow.com/questions/27845449/google-maps-multiple-markers-and-polylines-json
https://developers.google.com/maps/documentation/javascript/importing_data#maps_earthquake_markers-javascript
https://developers.google.com/maps/documentation/javascript/markers
https://developers.google.com/maps/documentation/javascript/examples/polyline-complex
https://developers.google.com/maps/documentation/javascript/examples/polyline-simple
https://github.com/codeforamerica/ohana-api/blob/master/data/sample-csv/addresses.csv
https://stackoverflow.com/questions/7928555/how-to-route-on-googlemap-from-csv-file
https://stackoverflow.com/questions/7894996/how-to-use-the-google-maps-api-with-greasemonkey-to-read-a-table-of-addresses-an
https://stackoverflow.com/questions/7894996/how-to-use-the-google-maps-api-with-greasemonkey-to-read-a-table-of-addresses-an
http://jsfiddle.net/cdugymah/3/
https://stackoverflow.com/questions/6660955/google-is-not-defined-when-using-google-maps-v3-in-firefox-remotely
https://stackoverflow.com/questions/3807963/how-to-get-longitude-and-latitude-of-any-address
https://www.google.com/search?client=firefox-b-d&q=w3school+google+map+csv





https://jsfiddle.net/sourabhtewari/aLk0c2fa/






https://stackoverflow.com/questions/60544486/google-map-infowindow-is-not-looping-from-php-database-in-laravel-project



// var coordinates = [];
        // var map;
        // var google = unsafeWindow.google;

        // function getCoor() {
        //     return coordinates;
        // }

        // function handle_files(files) {
        //     for (i = 0; i < files.length; i++) {
        //         file = files[i];
        //         console.log(file);
        //         var reader = new FileReader();
        //         ret = [];
        //         reader.onload = function(e) {
        //             console.log(e.target.result);
        //             var lines = e.target.result.split('\n');
        //             for (var line = 0; line < lines.length; line++) {

        //                 var point = lines[line].split(',');

        //                 var count = 0;

        //                 for (var dua = 0; dua < point.length; dua++) {
        //                     if (dua % 2 === 0) {
        //                         var latitude = point[dua];
        //                     } else {
        //                         var longitude = point[dua];
        //                         coordinates[count] = new google.maps.LatLng(latitude, longitude);
        //                         // console.log(coordinates[count]);
        //                         count++;
        //                     }
        //                 }
        //                 var myTrip = [];
        //                 var bounds = new google.maps.LatLngBounds();
        //                 for (var c = 0; c < coordinates.length; c++) {
        //                     myTrip.push(coordinates[c]);
        //                     bounds.extend(coordinates[c]);
        //                 }
        //                 map.fitBounds(bounds);

        //                 // console.log(myTrip);
        //                 var flightPath = new google.maps.Polyline({
        //                     path: myTrip,
        //                     strokeColor: "#0000FF",
        //                     strokeOpacity: 0.8,
        //                     strokeWeight: 8
        //                 });

        //                 flightPath.setMap(map);
        //                 // var marker = new google.maps.Marker({position: bounds});

        //                 // marker.setMap(map);

        //             }

        //         }
        //         reader.onerror = function(stuff) {
        //             // console.log("error", stuff);
        //             // console.log(stuff.getMessage());
        //         }
        //         reader.readAsText(file); //readAsdataURL
        //     }

        // }

        // function initialize() {

        //     var mapProp = {

        //         center: new google.maps.LatLng(8.611911, 41.146056),
        //         zoom: 6,
        //         mapTypeId: google.maps.MapTypeId.ROADMAP
        //     };

        //     map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        // }

        // google.maps.event.addDomListener(window, 'load', initialize);
